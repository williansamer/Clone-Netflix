{"version":3,"sources":["Tmdb.js","components/Context/ContextAPI.js","components/Context/hooks/useMovie.js","components/Header/index.js","images/a.jpg","components/FeaturedMovie/index.js","components/MovieRow/index.js","App.js","index.js"],"names":["API_KEY","basicFetch","endPoint","a","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","id","type","info","Context","createContext","ContextProvider","children","useState","blackHeader","setBlackHeader","featuredData","setFeaturedData","movieList","setMovieList","useEffect","loadList","Tmdb","list","console","log","originals","filter","i","randomChosen","Math","floor","random","results","length","chosen","chosenInfo","isBlackheader","window","scrollY","addEventListener","removeEventListener","useMovie","Provider","value","Header","useContext","className","href","src","alt","FeaturedMovie","firstDate","Date","first_air_date","genres","push","name","description","overview","substring","style","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","Image","original_name","vote_average","getFullYear","number_of_seasons","join","MovieRow","React","scrollX","setScrollX","onClick","x","innerWidth","listW","marginLeft","width","transition","map","item","key","poster_path","App","role","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0314f13e.chunk.js","sourcesContent":["const API_KEY = \"5de05f3f8f39cd811fd774a507ac8d0c\";\r\nconst BASE_URL = \"https://api.themoviedb.org/3\";\r\n\r\nconst basicFetch = (async(endPoint)=>{\r\n\r\n    const req = await fetch(`${BASE_URL}${endPoint}`)\r\n    const json = await req.json();\r\n    return json;\r\n})\r\n\r\nexport default {\r\n  getHomeList: async  () => {\r\n    return [\r\n      {\r\n        slug: \"originals\",\r\n        title: \"Originais do Netflix\",\r\n        items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`),\r\n      },\r\n      {\r\n        slug: \"trending\",\r\n        title: \"Recomendados para você\",\r\n        items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`),\r\n      },\r\n      {\r\n        slug: \"toprated\",\r\n        title: \"Em alta\",\r\n        items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`),\r\n      },\r\n      {\r\n        slug: \"action\",\r\n        title: \"Ação\",\r\n        items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`),\r\n      },\r\n      {\r\n        slug: \"comedy\",\r\n        title: \"Comédia\",\r\n        items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`),\r\n      },\r\n      {\r\n        slug: \"horror\",\r\n        title: \"Terror\",\r\n        items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`),\r\n      },\r\n      {\r\n        slug: \"romance\",\r\n        title: \"Romance\",\r\n        items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`),\r\n      },\r\n      {\r\n        slug: \"documentary\",\r\n        title: \"Documentários  \",\r\n        items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`),\r\n      }\r\n    ];\r\n  },\r\n  getMovieInfo: async (id, type)=>{\r\n    let info = {};\r\n\r\n    if(id){\r\n        switch (type) {\r\n            case 'movie':\r\n                info = await basicFetch(`/movie/${id}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n            case 'tv':\r\n                info = await basicFetch(`/tv/${id}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n            default:\r\n                info = null;\r\n                break;\r\n        }\r\n    }\r\n    return info;\r\n  }\r\n};\r\n","import React, {createContext} from 'react'\r\n\r\nimport useMovie from './hooks/useMovie'\r\n\r\nconst Context = createContext()\r\n\r\nfunction ContextProvider({children}) {\r\n\r\n    const {blackHeader, featuredData, movieList} = useMovie()\r\n\r\n    return (\r\n        <Context.Provider value={{blackHeader, featuredData, movieList}}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport {Context, ContextProvider};","import {useState, useEffect} from 'react'\r\n\r\nimport Tmdb from \"../../../Tmdb\";\r\n\r\nexport default function useMovie() {\r\n\r\n    const [blackHeader, setBlackHeader] = useState(false);\r\n    const [featuredData, setFeaturedData] = useState(null);\r\n    const [movieList, setMovieList] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      const loadList = async () => {\r\n        //Pegando a lista\r\n        const list = await Tmdb.getHomeList();\r\n        console.log(list);\r\n        setMovieList(list);\r\n  \r\n        //Pegando o filme em destaque\r\n        const originals = list.filter((i) => i.slug === \"originals\");\r\n        const randomChosen = Math.floor(\r\n          Math.random() * (originals[0].items.results.length - 1)\r\n        );\r\n        const chosen = originals[0].items.results[randomChosen];\r\n        const chosenInfo = await Tmdb.getMovieInfo(chosen.id, \"tv\");\r\n  \r\n        setFeaturedData(chosenInfo);\r\n        console.log(chosenInfo);\r\n      };\r\n  \r\n      loadList();\r\n    }, []);\r\n  \r\n    useEffect(() => {\r\n      const isBlackheader = () => {\r\n        if (window.scrollY > 10) {\r\n          setBlackHeader(true);\r\n        } else {\r\n          setBlackHeader(false);\r\n        }\r\n      };\r\n  \r\n      window.addEventListener(\"scroll\", isBlackheader); //quando a página é rolada, chama a função isBlackheader\r\n  \r\n      return () => {\r\n        window.removeEventListener(\"scroll\", isBlackheader);\r\n      }; //quando o componente for desmontado ou removido do DOM\r\n    }, []);\r\n\r\n    \r\n    return {blackHeader, featuredData, movieList}\r\n}\r\n","import React, { useContext } from 'react'\r\nimport {Context} from '../Context/ContextAPI';\r\nimport './Header.css';\r\n\r\nexport default function Header() {\r\n\r\n    const {blackHeader} = useContext(Context);\r\n    \r\n    return (\r\n        <header className={blackHeader ? 'black' : ''}>\r\n            <div className=\"header--logo\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/7/7a/Logonetflix.png\" alt=\"Netflix\" />\r\n                </a>\r\n            </div>\r\n            <div className=\"header--user\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cf/Users_icon.svg/512px-Users_icon.svg.png\" alt=\"User\" />\r\n                </a>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/a.64a02e9d.jpg\";","import React, { useContext } from 'react'\r\nimport {Context} from '../Context/ContextAPI';\r\n\r\nimport \"./FeaturedMovie.css\";\r\nimport Image from \"../../images/a.jpg\";\r\n\r\nexport default function FeaturedMovie() {\r\n\r\n  const {featuredData} = useContext(Context);\r\n\r\n  const firstDate = new Date(featuredData.first_air_date);\r\n  const genres = [];\r\n  for (let i in featuredData.genres) {\r\n    genres.push(featuredData.genres[i].name);\r\n  }\r\n\r\n  let description = featuredData.overview;\r\n  if(description.length > 217) {\r\n    description = description.substring(0, 217) + \"...\";\r\n  }\r\n\r\n  return (\r\n    <section\r\n      className=\"featured\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        backgroundImage: featuredData.backdrop_path\r\n          ? `url(https://image.tmdb.org/t/p/original${featuredData.backdrop_path})`\r\n          : `url(${Image})`,\r\n      }}\r\n    >\r\n      <div className=\"featured--vertical\">\r\n        <div className=\"featured--horizontal\">\r\n          <div className=\"featured--name\">{featuredData.original_name}</div>\r\n          <div className=\"featured--info\">\r\n            <div className=\"featured--points\">\r\n              {featuredData.vote_average === 0\r\n                ? \"Relevância: N/A\"\r\n                : `Relevância: ${featuredData.vote_average * 10}%`}\r\n            </div>\r\n            <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n            <div className=\"featured--seasons\">\r\n              {featuredData.number_of_seasons} temporada\r\n              {featuredData.number_of_seasons === 1 ? \"\" : \"s\"}\r\n            </div>\r\n          </div>\r\n          <div className=\"featured--descriptions\">\r\n            {description !== \"\"\r\n              ? description\r\n              : \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\"}\r\n          </div>\r\n          <div className=\"featured--buttons\">\r\n            <a className=\"featured--watchbutton\" href={`/watch/${featuredData.id}`}>► Assistir</a>\r\n            <a className=\"featured--mylistbutton\" href={`/list/add/${featuredData.id}`}>+ Minha Lista</a>\r\n          </div>\r\n          <div className=\"featured--genres\">\r\n            <strong>Gênero: </strong>\r\n            {genres.join(\", \")}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./MovieRow.css\";\r\n\r\nexport default function MovieRow({ title, items }) {\r\n  \r\n  const [scrollX, setScrollX] = React.useState(0);\r\n\r\n  function handleClickLeft(){\r\n    let x = scrollX + (window.innerWidth / 2)\r\n    \r\n    if(x > 0){\r\n      x = 0;\r\n    }\r\n    setScrollX(x);\r\n    \r\n  }\r\n  function handleClickRight(){\r\n    let x = scrollX - (window.innerWidth / 2);\r\n    let listW = items.results.length * 150\r\n    if(window.innerWidth - listW > x){\r\n      x = (window.innerWidth - listW) - 60; // -60 da largura das setas de scroll\r\n    }\r\n    setScrollX(x);\r\n  }\r\n\r\n  return (\r\n    <div className=\"movieRow\">\r\n      <h2>{title}</h2>\r\n      <div className=\"movieRow--listarea\">\r\n        <div onClick={handleClickLeft} className=\"movieRow--arrow--left\">˂</div>\r\n        <div onClick={handleClickRight} className=\"movieRow--arrow--right\">˃</div>\r\n\r\n        <div className=\"movieRow--list\" style={{\r\n          marginLeft: scrollX,\r\n          width: items.results.length * 150,\r\n          transition: 'margin-left 0.5s'\r\n        }}>\r\n          {items.results.length > 0 &&\r\n            items.results.map((item, key) => (\r\n              <div className=\"movieRow--item\" key={key}>\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w300${item.poster_path}`}\r\n                  alt={item.original_name}\r\n                />\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport React, { useContext } from \"react\";\r\nimport { Context } from \"./components/Context/ContextAPI\";\r\n\r\nimport Header from \"./components/Header\";\r\nimport FeaturedMovie from \"./components/FeaturedMovie\";\r\nimport MovieRow from \"./components/MovieRow/\";\r\n\r\nfunction App() {\r\n  const { featuredData, movieList } = useContext(Context);\r\n  //const movieList  = useContext(Context);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n\r\n      {featuredData && <FeaturedMovie />}\r\n\r\n      <section className=\"lists\">\r\n        {movieList.map((item, key) => (\r\n          <MovieRow key={key} title={item.title} items={item.items} />\r\n        ))}\r\n      </section>\r\n\r\n      <footer>\r\n        Feito com{\" \"}\r\n        <span role=\"img\" aria-label=\"coração\">\r\n          ❤️\r\n        </span>{\" \"}\r\n        por Willian Samer.\r\n        <br />\r\n        Direitos de imagem para Netflix. <br />\r\n        Dados pegos do site themoviedb.org\r\n      </footer>\r\n\r\n      {movieList <= 0 && (\r\n        <div className=\"loading\">\r\n          <img\r\n            src=\"https://i.gifer.com/origin/36/36527397c208b977fa3ef21f68c0f7b2.gif\"\r\n            alt=\"Carregando\"\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nimport { ContextProvider } from \"./components/Context/ContextAPI\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ContextProvider>\r\n      <App />\r\n    </ContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}